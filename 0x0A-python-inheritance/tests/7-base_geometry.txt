###############################
 BaseGeometry_integer_validaor
###############################

Usage:
`` instance.interger_validator(name, value) ``


import module

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()


TestCase#0

>>> hasattr(bg, 'integer_validator')
True


TestCase#1

Basic Usage

>>> bg.integer_validator("my_int", 12)


TestCase#2

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
	...
TypeError: name must be an integer


TestCase#3

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
 ...
ValueError: age must be greater than 0

TestCase#4

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
	...
ValueError: distance must be greater than 0


TestCase#4

>>> bg.integer_validator("John", None)
Traceback (most recent call last):
	...
TypeError: John must be an integer


TestCase#5

>>> bg.area()
Traceback (most recent call last):
	...
Exception: area() is not implemented


TestCase#6
>>> bg.integer_validator()
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'



TestCase#7

>>> bg.integer_validator("age")
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 1 required positional argument: 'value'



TestCase#8

>>> bg.integer_validator("age", 1)




TestCase#9

>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
	...
TypeError: age must be an integer



TestCase#10

>>> bg.integer_validator("age", True)
Traceback (most recent call last):
	...
TypeError: age must be an integer


TestCase#11

>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
	...
TypeError: age must be an integer


TestCase#12

>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
	...
TypeError: age must be an integer

TestCase#13

>>> bg.integer_validator("age", "4")
Traceback (most recent call last):
	...
TypeError: age must be an integer
